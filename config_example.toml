# 30分钟重新加载一次本配置（默认不生效，如果ENV配置了CONFIG_URL，也就是说如果这份配置是来源于一个URL，自动重新加载就会生效）
reloadInterval = 30

#默认异常内容提醒
errorNotify='dingbot'
#异常消息
errorNotifyMsg='error: ${e.toString()}, errorMsg: ${errMsg}'
# js脚本获取数据
[resource.jsForExample]
type = 'js'
param='{"authKey":"xxxxxxxxxx", "name":"xxxAuth"}' # 如果参数写脚本里了就可以不写这个参数。必须json格式，最外面单引号，里面内容用双引号（key必须用引号）。
url='https://pastebin.com/raw/UL6ZCBGM' # 示例代码（建议打开看看）。可以取context上下文和自定义param。使用logger.info('自定义信息')来确认脚本被执行了。
#url = 'https://gist.githubusercontent.com/keeper402/******************************************/raw/test.js'
# rest接口获取数据
[resource.ASharesPrice]
type = 'rest'
# 这个接口是按日的，只能获取到前一天的数据。仅作示例，实际做不到实时监控
url = 'https://money.finance.sina.com.cn/quotes_service/api/json_v2.php/CN_MarketData.getKLineData?symbol=sh000001&scale=240&ma=5&datalen=1'
method = 'GET'
#headers = '' # 没有header就不要设置，设置空字符串会报错
body = '' # 使用post填body
result = '$[0].low' # 使用jsonPath取对象。

# msg是notify中定义的，这里会引入
# webhook通知方式 钉钉机器人
[notify.dingbot]
type = 'webhook'
url = 'https://oapi.dingtalk.com/robot/send?access_token=xxxxxxxxxxxx'
method = 'post'
headers = '{"content-type":"application/json;charset=utf-8"}'
body = '{"msgtype":"text","text":{"content":"通知：${msg}"}}'

# type='mail'时，使用nodemailer发送邮件.搜索邮箱如何开通SMTP服务一般都可以拿到pass
[notify.qqMail]
type='mail'
from='xxxxxx@qq.com'
to='xxxxxx@qq.com'
pass='这里填pass'
title='规则：${context.ruleName} 发出通知'
text='通知内容：${msg}'

# 虽然写着webhook，但是本质是个请求，可以做的事很多
# 比如给服务保活
[notify.keepAlive]
type = 'webhook'
url = 'https://notify-everything.vercel.com/'
method = 'get'

# 比如每天重置这份示例配置，毕竟公开出去，一切都可能会被改。
[notify.resetThisConfig]
type = 'js'
param='{"url":"xxxxxxxxxx", "token":"xxxx"}'
url='https://raw.githubusercontent.com/keeper402/NotifyEverything/master/scripts/resetExampleCode'


# 规则， 资源+条件+定时=>通知
# condition中被${}包括的resource将会被执行，取得的值进入condition判断。也可以在msg中被引用
# 检查癌股是不是又3000点以下了
[rule.checkASharesBelow3000]
interval = 1 # 每间隔1分钟执行一次检查
cron = '0 0 15 * * MON-FRI' # 如果有corn优先按corn计划任务
#cron = '0/10 * * * * MON-FRI' # 如果有corn优先按corn计划任务
condition = "${ASharesPrice} < 3000 && ${jsForExample}"
muteAfterNotify = 300 #命中不再检查5小时/重载配置以后取消mute
notify = 'qqMail'
msg = '测试发送：${ASharesPrice}'

# 工作日10,14,16点叫自己喝水
[rule.drinkWater]
cron = '0 0 10,14,16 ? * MON-FRI '
condition = "true"
notify = 'dingbot'
msg = '放下工作情节，尊重喝水命运'

# 工作日10.30,14.30,16.30点叫自己喝水
[rule.drinkWater2]
cron = '0 30 10,14,16 ? * MON-FRI '
condition = "true"
notify = 'dingbot'
msg = '放下工作情节，尊重喝水命运'

# 保活
[rule.keepAliveForSite]
cron = '0 0/3 * * * ?'
condition = "true"
notify = 'keepAlive'
msg = ''

# 每天重置本配置。每隔6小时一次。
[rule.resetThisConfigRule]
cron = '0 0 0/6 * * ?'
condition = "true"
notify = 'resetThisConfig'